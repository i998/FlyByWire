/*
Original library is from https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library
Updated by IF 
2018-02-02
- tested support hardware I2C for Maple Mini board / STM32 (https://github.com/rogerclarkmelbourne/Arduino_STM32/)
- added setServo function
- added getServoResolution function
- changed set frequency - added configurable multiplier
- channels renumbered to start from 1 
- added comments/descriptions 
=================================================================
/*************************************************** 
  This is a library for our Adafruit 16-channel PWM & Servo driver

  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/products/815

  These displays use I2C to communicate, 2 pins are required to  
  interface. For Arduino UNOs, thats SCL -> Analog 5, SDA -> Analog 4

  Adafruit invests time and resources providing this open source code, 
  please support Adafruit and open-source hardware by purchasing 
  products from Adafruit!

  Written by Limor Fried/Ladyada for Adafruit Industries.  
  BSD license, all text above must be included in any redistribution
 ****************************************************/

#ifndef PCA9685ServoDriver_H
#define PCA9685ServoDriver_H

#if ARDUINO >= 100
 #include "Arduino.h"
#else
 #include "WProgram.h"
#endif

#if defined(_BOARD_MAPLE_MINI_H_)
 #include "Wire.h"   
#else
 #include "Wire.h"
#endif


//Define PCA9685 registers 
#define PCA9685_SUBADR1 0x2
#define PCA9685_SUBADR2 0x3
#define PCA9685_SUBADR3 0x4

#define PCA9685_MODE1 0x0
#define PCA9685_PRESCALE 0xFE

#define LED0_ON_L 0x6
#define LED0_ON_H 0x7
#define LED0_OFF_L 0x8
#define LED0_OFF_H 0x9

#define ALLLED_ON_L 0xFA
#define ALLLED_ON_H 0xFB
#define ALLLED_OFF_L 0xFC
#define ALLLED_OFF_H 0xFD

/**************************************************************************/
/*! 
    @brief  Class that stores state and functions for interacting with PCA9685 PWM chip
*/
/**************************************************************************/
class PCA9685ServoDriver {
 public:
  PCA9685ServoDriver(uint8_t addr = 0x40);
  PCA9685ServoDriver(TwoWire *I2C, uint8_t addr = 0x40);
  
  //Setups the I2C interface and hardware
  void begin(void);
  //Sends a reset command to the PCA9685 chip over I2C
  void reset(void);
  
  
  //This function can be used to adjust the PWM frequency, which determines how many full 'pulses' per second are generated by the IC.
  //freq: A number representing the frequency in Hz, between 40 and 1000
  void setPWMFreq(float freq);
  
  //Frequency calibration 
  //Multiplier to the frequency to compensate overshoot of PCA9685 chip in the  original Adafruit library  
  //If required, need to be set BEFORE calling setPWMFreq(ferq) function!
  //https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library/issues/11
  //Default value 0.934
  float freqCalibration = 0.934;
  
  //This function sets the start (on) and end (off) of the high segment of the PWM pulse on a specific channel. 
  //  You specify the 'tick' value between 0..4095 when the signal will turn on, and when it will turn off. 
  //Channel indicates which of the 16 PWM outputs should be updated with the new values.
  //Arguments
  //• num: The channel that should be updated with the new values (1..16)
  //• on: The tick (between 0..4095) when the signal should transition from low to high
  //• off:the tick (between 0..4095) when the signal should transition from high to low
  //
  //Note:
  //You can set the pin to be fully on with
  //pwm.setPWM(pin, 4096, 0);
  //You can set the pin to be fully off with
  //pwm.setPWM(pin, 0, 4096);
  void setPWM(uint8_t num, uint16_t on, uint16_t off);


  //Helper to set pin PWM output. Sets pin without having to deal with on/off tick placement 
  //and properly handles a zero value as completely off and 4095 as completely on. 
  //Optional invert parameter supports inverting the pulse for sinking to ground.
  //Arguments
  //• num: One of the PWM output pins, from 1 to 16
  //• val: The number of ticks out of 4096 to be active, should be a value from 0 to 4095 inclusive.
  //• invert: If true, inverts the output, defaults to 'false'
  void setPin(uint8_t num, uint16_t val, bool invert=false);

   
  //Sets the Servo at of one of the PCA9685 pins
  //Arguments
  //• num: One of the PWM output pins, from 1 to 16
  //• pulseLength: pulse length in microseconds
  void setServo(uint8_t num, uint16_t pulseLength);
  
  
  //Returns the Servo resolution 
  //(i.e. minimal input change that will be recognised byPCA9685 chip) in microseconds. 
  //Depends in the frequency the chip is set on by setPWMFreq function.
  float getServoResolution(void);
  
  
 private:
  uint8_t _i2caddr;
  
 // TwoWire *_i2c;
  #if defined(_BOARD_MAPLE_MINI_H_)
  TwoWire *_i2c;  // Wire *_i2c;
  #else
  TwoWire *_i2c;
  #endif
  
  
  float _freq=50;  //default value 50Hz, valid range in Hz, between 40 and 1000. 
  float _tickPCA9685inMicros = 4.9;  // duration of one PCA9685 tick in microseconds. Default is 4.9 us for 50Hz servo rate     

  uint8_t read8(uint8_t addr);
  void write8(uint8_t addr, uint8_t d);
};

#endif
